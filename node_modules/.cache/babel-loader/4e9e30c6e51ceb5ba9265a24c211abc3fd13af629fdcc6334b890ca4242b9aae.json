{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos\\\\ds\\\\gerador-de-QrCode\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport './App.css';\nimport QRCode from \"react-qr-code\";\nimport QRCodeLink from 'qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [linkText, setLinkText] = useState(\"\");\n  const [linkQrCode, setLinkQrCode] = useState('');\n  function handleQrCode(e) {\n    setLinkText(e.target.value);\n    handleQrCode(e.target.value);\n  }\n  function handleGenerate(link_url) {\n    QRCodeLink.toDataURL(link_url, {\n      width: 600,\n      margin: 3\n    }), function (err, url) {\n      setLinkQrCode(url);\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(QRCode, {\n      className: \"Qr\",\n      value: linkText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      className: \"link\",\n      onChange: e => {\n        handleQrCode(element);\n      },\n      value: linkText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wsYHWGhzKfJEOyID8qsmfI/5PWE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Input","QRCode","QRCodeLink","jsxDEV","_jsxDEV","App","_s","linkText","setLinkText","linkQrCode","setLinkQrCode","handleQrCode","e","target","value","handleGenerate","link_url","toDataURL","width","margin","err","url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","element","_c","$RefreshReg$"],"sources":["D:/Projetos/ds/gerador-de-QrCode/front-end/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {Input} from 'reactstrap';\nimport './App.css';\nimport QRCode from \"react-qr-code\";\nimport QRCodeLink from 'qrcode';\n\nfunction App() {\n\n  const[linkText, setLinkText] = useState(\"\");\n  const[linkQrCode, setLinkQrCode] = useState('');\n\n  function handleQrCode(e){\n    setLinkText(e.target.value);\n    handleQrCode(e.target.value);\n  }\n\n  function handleGenerate(link_url){\n    QRCodeLink.toDataURL(link_url,{\n      width: 600,\n      margin: 3\n    }), function(err, url){\n      setLinkQrCode(url);\n    }\n  }\n\n  return (\n    <div className=\"app\"> \n      <QRCode className='Qr' value={linkText}/>\n      <Input className='link' onChange={(e) => {handleQrCode(element)}} value={linkText} \n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,KAAK,QAAO,YAAY;AAChC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,UAAU,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAK,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE/C,SAASY,YAAYA,CAACC,CAAC,EAAC;IACtBJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3BH,YAAY,CAACC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B;EAEA,SAASC,cAAcA,CAACC,QAAQ,EAAC;IAC/Bd,UAAU,CAACe,SAAS,CAACD,QAAQ,EAAC;MAC5BE,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,CAAC,EAAE,UAASC,GAAG,EAAEC,GAAG,EAAC;MACpBX,aAAa,CAACW,GAAG,CAAC;IACpB,CAAC;EACH;EAEA,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA,CAACH,MAAM;MAACqB,SAAS,EAAC,IAAI;MAACR,KAAK,EAAEP;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzCvB,OAAA,CAACJ,KAAK;MAACsB,SAAS,EAAC,MAAM;MAACM,QAAQ,EAAGhB,CAAC,IAAK;QAACD,YAAY,CAACkB,OAAO,CAAC;MAAA,CAAE;MAACf,KAAK,EAAEP;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CA1BQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}